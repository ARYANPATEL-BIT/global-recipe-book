<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Chicken Biryani — Recipe</title>

  <!-- Google Font -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600;700&display=swap" rel="stylesheet">

  <style>
    :root{
      --bg:#fff8f2;
      --accent:#d35400;
      --muted:#6b6b6b;
      --card:#ffffff;
      --glass: rgba(255,255,255,0.7);
      --max-width: 980px;
      --radius: 14px;
      --transition: 200ms ease;
    }
    *{box-sizing:border-box}
    html,body{height:100%}
    body{
      margin:0;
      font-family:Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
      background: linear-gradient(180deg,#fffdf8 0%, #fff6ee 100%);
      color:#222;
      -webkit-font-smoothing:antialiased;
      -moz-osx-font-smoothing:grayscale;
      padding:28px;
      display:flex;
      justify-content:center;
      align-items:flex-start;
      gap:20px;
    }

    .container{
      width:100%;
      max-width:var(--max-width);
      margin:0 auto;
    }

    header.site-header{
      display:flex;
      gap:18px;
      align-items:center;
      margin-bottom:18px;
    }
    .logo{
      width:84px;
      height:84px;
      border-radius:16px;
      background: linear-gradient(135deg, #ffedd7, #ffd3b0);
      display:flex;
      align-items:center;
      justify-content:center;
      box-shadow: 0 6px 18px rgba(211,84,0,0.12);
      flex-shrink:0;
    }
    .logo svg{width:48px;height:48px;opacity:0.95}
    .title-wrap h1{
      margin:0;
      font-size:20px;
      letter-spacing:0.2px;
    }
    .title-wrap p{margin:4px 0 0;color:var(--muted);font-size:13px}

    .card {
      background: var(--card);
      border-radius: var(--radius);
      box-shadow: 0 10px 30px rgba(11,11,11,0.06);
      overflow:hidden;
    }

    .hero{
      display:grid;
      grid-template-columns: 420px 1fr;
      gap:0;
    }
    @media (max-width:900px){
      .hero{grid-template-columns: 1fr; padding-bottom:0;}
      .hero .left{order:2}
      .hero .right{order:1}
    }

    .left{
      position:relative;
      min-height:320px;
      background:
        radial-gradient(1000px 300px at 5% 20%, rgba(211,84,0,0.06), transparent 12%),
        linear-gradient(180deg, rgba(255,245,235,1), rgba(255,250,248,1));
      padding:22px;
      display:flex;
      align-items:center;
      justify-content:center;
      gap:12px;
    }
    .photo{
      width:100%;
      max-width:360px;
      border-radius:12px;
      overflow:hidden;
      box-shadow: 0 15px 40px rgba(15,15,15,0.12);
      border: 6px solid rgba(255,255,255,0.6);
      background:linear-gradient(180deg,#fff6f0,#fff);
      display:flex;
      align-items:center;
      justify-content:center;
      padding:6px;
    }
    /* tasteful SVG pot image as placeholder */
    .photo svg{width:100%;height:auto;display:block}

    .right{
      padding:28px;
    }

    .meta{
      display:flex;
      gap:12px;
      align-items:center;
      margin-bottom:16px;
      flex-wrap:wrap;
    }
    .badge{
      background:var(--glass);
      padding:8px 12px;
      border-radius:999px;
      font-weight:600;
      font-size:13px;
      color:var(--accent);
      border:1px solid rgba(211,84,0,0.08);
    }

    .controls{
      margin-top:8px;
      display:flex;
      gap:12px;
      align-items:center;
      flex-wrap:wrap;
    }

    .servings {
      display:flex;
      align-items:center;
      gap:8px;
      background:#fff;
      border-radius:10px;
      padding:6px;
      box-shadow: 0 6px 18px rgba(0,0,0,0.04);
    }
    .servings button{
      background:transparent;border:0;padding:6px 8px;border-radius:8px;cursor:pointer;font-weight:700;font-size:16px;color:var(--accent)
    }
    .servings span{min-width:36px;text-align:center;font-weight:600}

    .actions{
      margin-left:auto;
      display:flex;
      gap:10px;
    }
    .btn{
      display:inline-flex;
      align-items:center;
      gap:8px;
      padding:8px 12px;
      border-radius:10px;
      font-weight:600;
      cursor:pointer;
      border:0;
      background:var(--accent);
      color:white;
      box-shadow: 0 8px 20px rgba(211,84,0,0.16);
      transition: transform var(--transition);
    }
    .btn.print { background:#3b82f6; box-shadow:0 8px 20px rgba(59,130,246,0.12) }
    .btn:active{ transform:translateY(1px) }

    main.recipe {
      display:grid;
      grid-template-columns: 1fr 320px;
      gap:20px;
      padding:18px 28px 28px;
    }
    @media (max-width:980px){
      main.recipe{grid-template-columns: 1fr;}
    }

    section.ingredients, section.steps{
      background: linear-gradient(180deg, rgba(255,255,255,0.82), rgba(255,255,255,0.98));
      padding:18px;
      border-radius:12px;
    }
    .ingredients h2, .steps h2 {margin:0 0 12px 0}
    ul.ings {list-style:none;padding:0;margin:0;display:grid;gap:8px}
    ul.ings li{
      display:flex;justify-content:space-between;align-items:center;padding:8px;border-radius:8px;
      background:linear-gradient(180deg,#fff,#fffefc);
      border:1px solid rgba(0,0,0,0.03);
    }

    .ingredient-qty{font-weight:700;color:var(--accent);min-width:90px;text-align:right}
    .steps ol{margin:0;padding-left:20px;color:#222;line-height:1.6}
    .note{font-size:13px;color:var(--muted);margin-top:10px}

    aside.card-side{
      background: linear-gradient(180deg,#fff,#fffefc);
      padding:18px;border-radius:12px;height:fit-content;
      border:1px solid rgba(0,0,0,0.03);
    }
    .timer{
      display:flex;flex-direction:column;gap:8px;
    }
    .nutrition{margin-top:12px;font-size:14px;color:var(--muted)}
    .tip{background:linear-gradient(90deg,#fff9f3,#fffbf9);padding:10px;border-radius:10px;border:1px dashed rgba(211,84,0,0.07);margin-top:12px;color:#5a3b1f}

    footer{
      margin-top:18px;color:var(--muted);font-size:13px;text-align:center;
    }

    /* print adjustments */
    @media print{
      body{padding:0;background:white}
      header.site-header, .controls, .btn, .badge {display:none}
      .card{box-shadow:none;border-radius:0}
    }

    /* subtle hover for list items */
    ul.ings li:hover{transform:translateY(-3px);transition:transform var(--transition)}
  </style>
</head>
<body>
  <div class="container">
    <header class="site-header">
      <div class="logo" aria-hidden="true">
        <!-- pot icon -->
        <svg viewBox="0 0 64 64" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
          <rect x="6" y="26" width="52" height="28" rx="4" fill="#D35400"/>
          <rect x="10" y="24" width="44" height="6" rx="3" fill="#fff" opacity="0.08"/>
          <rect x="22" y="12" width="20" height="8" rx="2" fill="#8B4513"/>
        </svg>
      </div>

      <div class="title-wrap">
        <h1>Chicken Biryani</h1>
        <p>Fragrant, layered chicken biryani — serves 4 (scalable)</p>
      </div>
    </header>

    <div class="card hero" role="region" aria-label="Chicken biryani hero">
      <div class="left">
        <div class="photo" aria-hidden="true">
          <!-- decorative SVG of rice/chicken -->
          <svg viewBox="0 0 640 360" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Illustration of biryani">
            <defs>
              <linearGradient id="g" x1="0" x2="1">
                <stop offset="0" stop-color="#ffe6cc"/>
                <stop offset="1" stop-color="#ffd8b3"/>
              </linearGradient>
            </defs>
            <rect width="100%" height="100%" fill="url(#g)"/>
            <g transform="translate(40,40)">
              <ellipse cx="280" cy="220" rx="220" ry="60" fill="#f2c48a"/>
              <g transform="translate(20,0)">
                <circle cx="200" cy="180" r="30" fill="#d86b2c"/>
                <circle cx="260" cy="170" r="28" fill="#c65a25"/>
                <path d="M100 150 q100 -50 220 0 q-60 30 -220 0" fill="#f7e9c8"/>
              </g>
            </g>
          </svg>
        </div>
      </div>

      <div class="right">
        <div class="meta">
          <div class="badge" title="Cuisine">Hyderabadi style</div>
          <div class="badge" title="Cooking Time">Cook: ~45 min</div>
          <div class="badge" title="Difficulty">Moderate</div>

          <div class="controls" style="margin-left:auto">
            <div class="servings" aria-label="Adjust servings">
              <button id="dec" aria-label="Decrease servings">−</button>
              <span id="servingsCount" aria-live="polite">4</span>
              <button id="inc" aria-label="Increase servings">+</button>
              <span style="font-size:13px;color:var(--muted);margin-left:6px;">servings</span>
            </div>

            <div class="actions">
              <button class="btn print" id="printBtn" title="Print recipe">Print</button>
              <button class="btn" id="startTimer" title="Start a 10-minute timer">Start 10m Timer</button>
            </div>
          </div>
        </div>

        <p style="margin-top:6px;color:var(--muted)">
          A classic, aromatic chicken biryani layered with spiced chicken and fragrant basmati rice. Below you'll find ingredients, step-by-step instructions, helpful tips, and nutrition notes.
        </p>

      </div>
    </div>

    <main class="recipe" role="main">
      <section class="ingredients">
        <h2>Ingredients</h2>
        <p class="note">Quantities shown for <strong id="servingsLabel">4 servings</strong>. Use the + / − buttons above to scale.</p>

        <ul class="ings" id="ingredientsList" aria-label="Ingredients">
          <!-- ingredients rendered by JS for scaling -->
        </ul>
      </section>

      <aside class="card-side">
        <div class="timer" aria-live="polite">
          <strong>Quick Timer</strong>
          <div style="display:flex;gap:8px;margin-top:8px;">
            <button class="btn" onclick="setTimer(600)">10 min</button>
            <button class="btn" onclick="setTimer(300)">5 min</button>
            <button class="btn" onclick="setTimer(60)">1 min</button>
          </div>
          <div id="timerDisplay" style="margin-top:10px;font-weight:700;color:var(--muted)">No timer</div>
        </div>

        <div class="nutrition" aria-hidden="true">
          <strong>Approx. Nutrition</strong>
          <p style="margin:8px 0 0">Per serving (estimate): 680 kcal • Protein 36g • Carbs 58g • Fat 30g</p>
        </div>

        <div class="tip" role="note">
          Tip: Use aged basmati for the most separate grains. Marinate chicken at least 30 minutes for deeper flavor. Layer firmly but don't press too hard.
        </div>
      </aside>

      <section class="steps">
        <h2>Method — Step by step</h2>

        <ol>
          <li><strong>Marinate the chicken:</strong> Mix 750g bone-in chicken pieces with 150g yogurt, 2 tbsp ginger-garlic paste, 1 tsp turmeric, 1½ tsp red chili powder, 2 tsp biryani masala (or garam masala), 2 tsp salt, and juice of half a lemon. Marinate for 30–60 minutes (or refrigerate up to 6 hours).</li>

          <li><strong>Prep rice:</strong> Rinse 400g basmati rice until water runs clear. Soak 20–30 minutes. Bring a large pot of water to boil with 1 bay leaf, 4 green cardamoms, 4 cloves and 1 tsp salt. Parboil rice for 6–7 minutes until 70% cooked. Drain and set aside.</li>

          <li><strong>Cook chicken:</strong> In a wide pan, heat 4 tbsp oil/ghee. Fry 2 thinly sliced onions until golden and crisp; remove half for garnish. Add whole spices (1 star anise, 1 cinnamon stick), then add marinated chicken. Cook on medium-high for 8–10 minutes until chicken is mostly cooked and oil separates. Add a few chopped tomatoes if you like.</li>

          <li><strong>Layering:</strong> Reduce heat to low. Add a layer of half the rice, sprinkle chopped coriander, mint, fried onions, a pinch of saffron soaked in 2 tbsp warm milk (or yellow food color), and 1–2 tbsp ghee. Repeat with remaining rice and toppings.</li>

          <li><strong>Dum (slow steam):</strong> Cover the pan with a tight lid (seal with dough if available) and cook on very low heat for 20–25 minutes. Alternatively, place the pan in a preheated oven at 180°C (350°F) for 20 minutes.</li>

          <li><strong>Rest & Serve:</strong> Let rest for 10 minutes. Gently fluff rice from the edges, serve hot with raita, salad, and lemon wedges.</li>
        </ol>

        <p class="note">Variations: Use mutton/veg with timing adjustments. For layered Hyderabadi style, partially fry chicken in a separate pot and assemble on a low flame for dum.</p>
      </section>
    </main>

    <footer>
      <small>Recipe created for demo — adjust spices & salt to taste. © Kitchen</small>
    </footer>
  </div>

  <script>
    // Base recipe quantities for 4 servings
    const baseServings = 4;
    let servings = baseServings;

    const baseIngredients = [
      {name: "Bone-in chicken (g)", qty: 750, unit: "g"},
      {name: "Basmati rice (g)", qty: 400, unit: "g"},
      {name: "Yogurt", qty: 150, unit: "g"},
      {name: "Onions, thinly sliced", qty: 2, unit: "pcs"},
      {name: "Ginger-garlic paste", qty: 2, unit: "tbsp"},
      {name: "Turmeric powder", qty: 1, unit: "tsp"},
      {name: "Red chili powder", qty: 1.5, unit: "tsp"},
      {name: "Biryani masala / garam masala", qty: 2, unit: "tsp"},
      {name: "Salt", qty: 2, unit: "tsp"},
      {name: "Ghee or oil", qty: 4, unit: "tbsp"},
      {name: "Saffron (optional)", qty: 10, unit: "strands"},
      {name: "Fresh coriander (chopped)", qty: 0.5, unit: "cup"},
      {name: "Fresh mint (chopped)", qty: 0.25, unit: "cup"},
      {name: "Lemon", qty: 0.5, unit: "pcs"},
      {name: "Whole spices (bay leaf, cardamom, cloves, cinnamon)", qty: 1, unit: "set"}
    ];

    const ingredientsListEl = document.getElementById('ingredientsList');
    const servingsCountEl = document.getElementById('servingsCount');
    const servingsLabelEl = document.getElementById('servingsLabel');

    function renderIngredients(){
      ingredientsListEl.innerHTML = '';
      servingsCountEl.textContent = servings;
      servingsLabelEl.textContent = servings + ' servings';

      baseIngredients.forEach(item => {
        const scale = servings / baseServings;
        // For readability, if qty is grams or numbers, scale else keep text
        let qtyText;
        if (typeof item.qty === 'number') {
          let scaled = item.qty * scale;
          // nicer rounding for tsp/tbsp etc
          const smallUnits = ['tsp','tbsp','cup'];
          if (smallUnits.includes(item.unit)) {
            scaled = Math.round(scaled*10)/10;
          } else if (item.unit === 'g') {
            scaled = Math.round(scaled);
          } else if (item.unit === 'pcs' || item.unit === 'set') {
            // allow fractional for pcs (round to nearest half)
            scaled = Math.round(scaled*2)/2;
          } else {
            scaled = Math.round(scaled*10)/10;
          }
          qtyText = scaled + (item.unit ? ' ' + item.unit : '');
        } else {
          qtyText = item.qty;
        }

        const li = document.createElement('li');
        li.innerHTML = `<div>${item.name}</div><div class="ingredient-qty">${qtyText}</div>`;
        ingredientsListEl.appendChild(li);
      });
    }

    document.getElementById('inc').addEventListener('click', ()=>{
      servings = Math.min(12, servings + 1);
      renderIngredients();
    });
    document.getElementById('dec').addEventListener('click', ()=>{
      servings = Math.max(1, servings - 1);
      renderIngredients();
    });

    // Print button
    document.getElementById('printBtn').addEventListener('click', ()=> {
      window.print();
    });

    // Timer simple implementation
    let timerHandle = null;
    function setTimer(seconds){
      if (timerHandle) {
        clearInterval(timerHandle);
        timerHandle = null;
      }
      const display = document.getElementById('timerDisplay');
      let remaining = seconds;
      display.textContent = formatTime(remaining);
      timerHandle = setInterval(()=>{
        remaining--;
        if (remaining <= 0){
          clearInterval(timerHandle);
          timerHandle = null;
          display.textContent = "Time's up!";
          // beep - short
          try {
            const ctx = new (window.AudioContext || window.webkitAudioContext)();
            const o = ctx.createOscillator();
            const g = ctx.createGain();
            o.type = 'sine'; o.frequency.value = 880;
            g.gain.value = 0.02;
            o.connect(g); g.connect(ctx.destination);
            o.start(); setTimeout(()=>{o.stop();ctx.close();}, 400);
          } catch(e){}
          return;
        }
        display.textContent = formatTime(remaining);
      }, 1000);
    }
    function formatTime(sec){
      const m = Math.floor(sec/60);
      const s = sec%60;
      return `${m}:${String(s).padStart(2,'0')}`;
    }

    // Start 10m timer button (example)
    document.getElementById('startTimer').addEventListener('click', ()=> setTimer(600));

    // Initialize
    renderIngredients();
  </script>
</body>
</html>
